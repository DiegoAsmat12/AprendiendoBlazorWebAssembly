@inject IJSRuntime js

@*@foreach (Pelicula pelicula in Peliculas)
    {
        <div>
            <p>Titulo: <b>@pelicula.Titulo</b></p>
            <p>Fecha de Lanzamiento: <b>@pelicula.Lanzamiento.ToString("dd MMM yyyy")</b></p>
        </div>
    }*@
@*@if (Peliculas == null)
{
    if (Cargando == null)
    {
        <text>Cargando...</text>
    }
    else
    {
        @Cargando
    }

    @*<img src="https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif" />
        <text>Cargando...</text>
}
else if (Peliculas.Count == 0)
{
    if (NoHayRegistros == null)
    {
        <text>No hay registros</text>
    }
    else
    {
        @NoHayRegistros
    }
}*@

    @*<input type="checkbox" @onchange="@(()=> MostrarBotones=!MostrarBotones)"/>*@
@*<input type="checkbox" @bind="MostrarBotones" />*@
    <div style="display:flex; flex-wrap:wrap; align-items:center;">
        <ListadoGenerico Listado="Peliculas">
            <HayRegistros Context="pelicula">
                <!--MostrarBotones="MostrarBotones" Esto iba dentro de pelicula individual-->
                <PeliculaIndividual Pelicula="pelicula" EliminarPelicula="EliminarPelicula" />
            </HayRegistros>
        </ListadoGenerico>
    </div>

@*<Confirmacion @ref="confirmacion" onConfirm="EliminarPeliculaConfirmacion" onCancel="onCancelConfirmacion">
    <div>¿Desea borrar la película?</div>
</Confirmacion>*@
@*@foreach (Pelicula pelicula in Peliculas)
{
<PeliculaIndividual Pelicula="pelicula" MostrarBotones="MostrarBotones" EliminarPelicula="EliminarPelicula" />
}*@

@code{
    Confirmacion confirmacion;
    [Parameter] public List<Pelicula> Peliculas { get; set; }

    //protected override void OnInitialized()
    //{
    //    Console.WriteLine("On Initialized");
    //}
    //protected override void OnParametersSet()
    //{
    //    Console.WriteLine("OnParametersSer");
    //}
    //protected override void OnAfterRender(bool firstRender)
    //{
    //    Console.WriteLine($"OnAfterRender: Primera vez: {firstRender}");
    //}
    //protected override bool ShouldRender()
    //{
    //    Console.WriteLine("ShouldRender"); //para la actualizacion en tiempo real
    //    return true;
    //}

    bool MostrarBotones = true;
    async Task EliminarPelicula(Pelicula pelicula)
    {
        //confirmacion.Mostrar();
        //peliculaABorrar = pelicula;
        var confirmar = await js.Confirm($"¿Desea borrar la película {pelicula.Titulo}?");
        //await js.InvokeAsync<bool>("confirm", $"¿Desea borrar la película {pelicula.Titulo}?");
        if (confirmar)
        {
            Peliculas.Remove(pelicula);
            Console.WriteLine($"Eliminada la Pelicula {pelicula.Titulo}");
        }

    }
    //Pelicula peliculaABorrar;
    //void EliminarPeliculaConfirmacion()
    //{
    //    Peliculas.Remove(peliculaABorrar);
    //    confirmacion.Ocultar();
    //    peliculaABorrar = null;
    //}
    //void onCancelConfirmacion()
    //{
    //    confirmacion.Ocultar();
    //    peliculaABorrar = null;
    //}

}
